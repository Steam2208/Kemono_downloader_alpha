#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üß™ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç KemonoDownloader v2.8.4
========================================
–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
1. –§–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
2. –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è
3. –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
"""

import sys
import os
import shutil
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('.')

from downloader_static import get_post_media, download_files_parallel

def main_test():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("üß™ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ KEMONODOWNLOADER v2.8.4")
    print("=" * 55)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_url = "https://kemono.cr/patreon/user/804602/post/91974242"
    test_dir = "test_final_v284"
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–∞–ø–∫–∏
    if os.path.exists(test_dir):
        shutil.rmtree(test_dir)
    os.makedirs(test_dir, exist_ok=True)
    
    results = {}
    
    print("üîç –¢–ï–°–¢ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–æ—Å—Ç–∞")
    print("-" * 35)
    
    start_time = time.time()
    media_links = get_post_media(test_url, enhanced_search=True, save_dir=test_dir)
    get_time = time.time() - start_time
    
    if media_links and len(media_links) > 0:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(media_links)}")
        for i, link in enumerate(media_links, 1):
            filename = link.split('/')[-1].split('?')[0]
            print(f"   {i}. {filename[:50]}...")
        results['files_found'] = True
    else:
        print("‚ùå –§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        results['files_found'] = False
    
    print(f"‚è±Ô∏è –í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è: {get_time:.1f}—Å")
    print()
    
    if not media_links:
        print("üí• –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
        return False
    
    print("üì• –¢–ï–°–¢ 2: –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ")
    print("-" * 35)
    
    # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è callback'–æ–≤
    thread_calls = []
    overall_calls = []
    
    def track_thread_progress(thread_id, filename, current, total):
        thread_calls.append((thread_id, filename[:20], current, total))
        print(f"üîÑ –ü–æ—Ç–æ–∫-{thread_id}: {current:3d}% - {filename[:25]}")
    
    def track_overall_progress(current, total):
        overall_calls.append((current, total))
        print(f"üìä –û–±—â–∏–π: {current}/{total} ({current/total*100:.0f}%)")
    
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ...")
    start_time = time.time()
    
    downloaded = download_files_parallel(
        media_links,
        test_dir,
        progress_data=None,
        max_workers=3,
        thread_callback=track_thread_progress,
        overall_callback=track_overall_progress,
        stop_check=None
    )
    
    download_time = time.time() - start_time
    
    print()
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í:")
    print("-" * 25)
    print(f"‚è±Ô∏è –í—Ä–µ–º—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {download_time:.1f}—Å")
    print(f"üìÅ –°–∫–∞—á–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {downloaded}/{len(media_links)}")
    print(f"üîÑ Thread callback –≤—ã–∑–æ–≤–æ–≤: {len(thread_calls)}")
    print(f"üìä Overall callback –≤—ã–∑–æ–≤–æ–≤: {len(overall_calls)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    real_files = []
    if os.path.exists(test_dir):
        for file in os.listdir(test_dir):
            filepath = os.path.join(test_dir, file)
            if os.path.isfile(filepath) and not file.startswith('.'):
                size = os.path.getsize(filepath)
                real_files.append((file, size))
    
    print(f"üíæ –†–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ: {len(real_files)}")
    for file, size in real_files:
        size_mb = size / (1024 * 1024)
        print(f"   ‚Ä¢ {file} ({size_mb:.1f} MB)")
    
    print()
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    results.update({
        'files_downloaded': downloaded > 0,
        'real_files_exist': len(real_files) > 0,
        'thread_callbacks_work': len(thread_calls) > 0,
        'overall_callbacks_work': len(overall_calls) > 0,
        'progress_initialized': any(call[0] == 0 for call in overall_calls),
        'progress_completed': any(call[0] == call[1] for call in overall_calls)
    })
    
    print("üéØ –ê–ù–ê–õ–ò–ó –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:")
    print("-" * 25)
    print(f"‚úÖ –§–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è: {results['files_found']}")
    print(f"‚úÖ –§–∞–π–ª—ã —Å–∫–∞—á–∏–≤–∞—é—Ç—Å—è: {results['files_downloaded']}")
    print(f"‚úÖ –†–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞—é—Ç—Å—è: {results['real_files_exist']}")
    print(f"‚úÖ Thread –ø—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç: {results['thread_callbacks_work']}")
    print(f"‚úÖ Overall –ø—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç: {results['overall_callbacks_work']}")
    print(f"‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è: {results['progress_initialized']}")
    print(f"‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è: {results['progress_completed']}")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    all_good = all(results.values())
    
    print()
    print("=" * 55)
    if all_good:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! KemonoDownloader v2.8.4 —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("   ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤")  
        print("   ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã")
        print("   ‚Ä¢ –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        failed = [k for k, v in results.items() if not v]
        print(f"   –ü—Ä–æ–±–ª–µ–º—ã: {', '.join(failed)}")
    
    print("=" * 55)
    return all_good

if __name__ == "__main__":
    success = main_test()
    exit(0 if success else 1)